- name: create a disk
  gcp_compute_disk:
    name: "{{ disk_name }}"
    size_gb: "{{ disk_size }}"
    source_image: "{{ vm_image }}"
    zone: "{{ region_zone }}"
    project: "{{ gcp_project }}"
    state: present
  register: disk

- name: get info for the default network
  gcp_compute_network_info:
    filters:
    - name = default
    project: "{{ gcp_project }}"
  register: network

# - name: create a network
#   gcp_compute_network:
#     name: "{{ network_name }}"
#     project: "{{ gcp_project }}"
#     state: present
#   register: network

  # don't actually need teh 2 different firewalls because I now deploy 
  # the GKE into the same network
- name: create the internet firewall
  gcp_compute_firewall:
    name: "{{ internet_firewall }}"
    allowed:
    - ip_protocol: tcp
      ports:
      - '22'
      - '443'
    network: "{{ network }}"
    project: "{{ gcp_project }}"
    state: present

# - name: create k8s intranet firewall
#   gcp_compute_firewall:
#     name: "{{ intranet_firewall }}"
#     allowed:
#     - ip_protocol: tcp
#       ports:
#       - '30000-32767'
#     network: "{{ network }}"
#     project: "{{ gcp_project }}"
#     target_tags:
#     - 'ood-k8s'
#     source_tags:
#     - 'ood'
#     state: present

- name: create an address
  gcp_compute_address:
    name: "{{ address_name }}"
    region: "{{ gcp_region }}"
    project: "{{ gcp_project }}"
    state: present
  register: address

- name: create an instance
  gcp_compute_instance:
    name: "{{ instance_name }}"
    hostname: "{{ servername }}"
    machine_type: "{{ machine_type }}"
    disks:
    - auto_delete: 'true'
      boot: 'true'
      source: "{{ disk }}"
    metadata: "{{ vm_metadata }}"
    labels: "{{ vm_labels }}"
    # tags:
    #   fingerprint: "{{ 'ood' | hash('sha1') }}"
    #   items:
    #   - 'ood'
    network_interfaces:
    - network: "{{ network }}"
      access_configs:
      - name: External NAT
        nat_ip: "{{ address }}"
        type: ONE_TO_ONE_NAT
    zone: "{{ region_zone }}"
    project: "{{ gcp_project }}"
    state: present
  register: vm_info

- debug:
    msg: "hash('ood') = {{ 'ood' | hash('sha1') }}"

- set_fact:
    vm_ip: "{{ vm_info | json_query('networkInterfaces[0].accessConfigs[0].natIP') }}"

- name: find the zone
  gcp_dns_managed_zone:
    name: "{{ dns_zone_name }}"
    dns_name: "{{ dns_zone }}."
    description: "{{ dns_zone_description }}"
    state: present
    project: "{{ gcp_project }}"
  register: managed_zone

- name: create the dns records
  gcp_dns_resource_record_set:
    name: "{{ servername }}."
    managed_zone: "{{ managed_zone }}"
    type: "{{ item }}"
    ttl: 600
    target: 
    - "{{ vm_ip }}"
    project: "{{ gcp_project }}"
    state: present
  loop:
  - "A"

- name: create an nfs filestore
  gcp_filestore_instance:
    name: ood-home-nfs
    zone: "{{ region_zone }}"
    tier: STANDARD
    file_shares:
    - capacity_gb: 1024
      name: "{{ ood_nfs_name }}"
    networks:
    - network: "{{ network_name }}"
      modes:
      - MODE_IPV4
    project: "{{ gcp_project }}"
    state: present